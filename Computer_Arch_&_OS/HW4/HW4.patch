diff --git a/Makefile b/Makefile
index 34c2c3a..3d66bad 100644
--- a/Makefile
+++ b/Makefile
@@ -180,6 +180,7 @@ UPROGS=\
 	_stressfs\
 	_usertests\
 	_wc\
+	_lsproc\
 	_zombie\
 	_testwait
 
@@ -250,7 +251,7 @@ qemu-nox-gdb: fs.img xv6.img .gdbinit
 
 EXTRA=\
 	mkfs.c ulib.c user.h cat.c echo.c forktest.c grep.c kill.c\
-	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\
+	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c lsproc.c zombie.c\
 	printf.c umalloc.c\
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
 	.gdbinit.tmpl gdbutil\
diff --git a/defs.h b/defs.h
index 82fb982..a17d1b2 100644
--- a/defs.h
+++ b/defs.h
@@ -120,6 +120,7 @@ void            userinit(void);
 int             wait(void);
 void            wakeup(void*);
 void            yield(void);
+int				clsproc(void);
 
 // swtch.S
 void            swtch(struct context**, struct context*);
diff --git a/lsproc.c b/lsproc.c
new file mode 100644
index 0000000..5d435c6
--- /dev/null
+++ b/lsproc.c
@@ -0,0 +1,12 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fcntl.h"
+
+int
+main(int argc, char *argv[])
+{
+	clsproc();
+	
+	exit();
+}
\ No newline at end of file
diff --git a/proc.c b/proc.c
index 806b1b1..9e2a9ee 100644
--- a/proc.c
+++ b/proc.c
@@ -532,3 +532,37 @@ procdump(void)
     cprintf("\n");
   }
 }
+
+// prints list of current processes
+int
+clsproc()
+{
+	// enable interrupts in the current process
+	sti();
+
+
+	acquire(&ptable.lock);
+	struct proc *p;
+	cprintf("name \t pid \t state \t address \t \n");
+
+	// for etch process whit a pid
+	for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
+
+		// get process name and pid
+		char* name = p->name;
+        int pid = p->pid;
+
+		// get and print process state and address
+		if(p->state == RUNNING)
+			cprintf("%s \t %d \t RUNNING \t %x \t \n", name, pid, p->pgdir);
+
+		else if(p->state == RUNNABLE)
+			cprintf("%s \t %d \t RUNNABLE \t %x \t \n", name, pid, p->pgdir);
+
+		else if(p->state == SLEEPING)
+			cprintf("%s \t %d \t SLEEPING \t %x \t \n", name, pid, p->pgdir);
+	}
+
+	release(&ptable.lock);
+	return 22;
+}
diff --git a/syscall.c b/syscall.c
index d2218c3..d228a3a 100644
--- a/syscall.c
+++ b/syscall.c
@@ -104,6 +104,8 @@ extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
 extern int sys_halt(void);
+extern int sys_clsproc(void);
+
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
 [SYS_exit]    sys_exit,
@@ -126,7 +128,8 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
-[SYS_halt]    sys_halt
+[SYS_halt]    sys_halt,
+[SYS_clsproc] sys_clsproc,
 };
 
 void
diff --git a/syscall.h b/syscall.h
index 1dd7b9b..2832608 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,4 +20,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_clsproc 22
 #define SYS_halt   50
diff --git a/sysproc.c b/sysproc.c
index 4fc95e9..334c8f7 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -97,4 +97,10 @@ sys_halt(void)
   return 0;
 }
 
+int
+sys_clsproc(void)
+{
+	return clsproc();
+}
+
 
diff --git a/user.h b/user.h
index 14f64db..f1b3dab 100644
--- a/user.h
+++ b/user.h
@@ -24,6 +24,7 @@ char* sbrk(int);
 int sleep(int);
 int uptime(void);
 int halt(void);
+int clsproc(void);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 0d4eaed..dc80aa1 100644
--- a/usys.S
+++ b/usys.S
@@ -30,3 +30,4 @@ SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
 SYSCALL(halt)
+SYSCALL(clsproc)
